{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","checkLast","checkFirst","className","cn","disabled","href","onClick","map","page","active","App","useState","pageCur","setPage","itemsPerPage","setItems","startIndex","endIndex","items","setCurPage","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAOtC,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,aAGIC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GActBI,EAAY,WAChB,OAAIN,IAAgBE,GAOhBK,EAA6B,IAAhBP,EAEnB,OACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUH,IADZ,SAIE,mBACE,UAAQ,WACRC,UAAWC,IAAG,YAAa,CACzBC,SAAUH,IAEZI,KAAK,QACL,gBAAeJ,EACfK,QA7BY,WACI,IAAhBZ,GACJC,EAAaD,EAAc,IAoBzB,oBAaAK,EAAMQ,KAAI,SAAAC,GAAI,OACZ,oBACEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAASd,IAFrB,SAME,mBACE,UAAQ,WACRQ,UAAU,YAEVG,KAAI,WAAMG,GACV,gBAAeA,IAASd,EACxBY,QAAS,kBAAMX,EAAaa,IAN9B,SAQGA,GALIA,IALFA,MAeX,oBAAIN,UAAWC,IAAG,CAChB,aAAa,EACbC,SAAUJ,MAFZ,SAKE,mBACE,UAAQ,WACRE,UAAWC,IAAG,YAAa,CACzBM,OAAQT,MAEVK,KAAK,QACL,gBAAeL,IACfM,QAAS,WAxETZ,IAAgBE,GACpBD,EAAaD,EAAc,IAgEzB,wBChFKgB,EAAgB,WAC3B,MAA2BC,mBAAS,GAApC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAiCF,mBAAS,GAA1C,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,GAAcJ,EAAU,GAAKE,EAAe,EAC5CG,EAAYD,GAAcF,EAAe,GANnC,MAOCE,GAAcF,EAAe,GACpCI,EAAQjC,EAAW+B,EAAYC,GAClCV,KAAI,SAAAlB,GAAC,qBAAYA,MAEd8B,EAAa,SAACX,GAClBK,EAAQL,IAGV,OACE,sBAAKN,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWU,EADX,mBAC6BI,EAD7B,cAC6CC,EAD7C,eAnBQ,GAmBR,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOP,EACPQ,SAAU,SAACC,GACTR,GAAUQ,EAAMC,OAAOH,OACvBF,EAAW,IAPf,UAUE,wBAAQE,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEV,MAjDM,GAkDNC,QAASqB,EACTpB,YAAakB,EACbjB,aAAcwB,IAEhB,6BAEID,EAAMX,KAAI,SAAAmB,GAAI,OACZ,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC5DpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.862686bd.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (value: number) => void\n}\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n\n  const getNextPage = () => {\n    if (!(currentPage === totalPages)) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const getPrevPage = () => {\n    if (!(currentPage === 1)) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const checkLast = () => {\n    if (currentPage === totalPages) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const checkFirst = currentPage === 1;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: checkFirst,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className={cn('page-item', {\n            disabled: checkFirst,\n          })}\n          href=\"#prev\"\n          aria-disabled={checkFirst}\n          onClick={getPrevPage}\n        >\n          «\n        </a>\n      </li>\n      {\n        pages.map(page => (\n          <li\n            className={cn('page-item', {\n              active: page === currentPage,\n            })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              key={page}\n              href={`#${page}`}\n              aria-disabled={page === currentPage}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))\n      }\n      <li className={cn({\n        'page-item': true,\n        disabled: checkLast(),\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className={cn('page-link', {\n            active: checkLast(),\n          })}\n          href=\"#next\"\n          aria-disabled={checkLast()}\n          onClick={() => getNextPage()}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst total = 42;\n\nexport const App: React.FC = () => {\n  const [pageCur, setPage] = useState(1);\n  const [itemsPerPage, setItems] = useState(5);\n  const startIndex = (pageCur - 1) * itemsPerPage + 1;\n  const endIndex = (startIndex + (itemsPerPage - 1)) > total\n    ? total : (startIndex + (itemsPerPage - 1));\n  const items = getNumbers(startIndex, endIndex)\n    .map(n => `Item ${n}`);\n\n  const setCurPage = (page:number) => {\n    setPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${pageCur} (items ${startIndex} - ${endIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItems(+event.target.value);\n              setCurPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={pageCur}\n        onPageChange={setCurPage}\n      />\n      <ul>\n        {\n          items.map(item => (\n            <li data-cy=\"item\" key={item}>{item}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}